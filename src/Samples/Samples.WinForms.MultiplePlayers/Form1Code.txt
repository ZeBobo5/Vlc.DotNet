using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;
using Vlc.DotNet.Core;
using Vlc.DotNet.Forms;

namespace Samples.WinForms.MultiplePlayers
{
    public partial class Form1 : Form
    {
        private readonly List<VlcControl> listOfControls = new List<VlcControl>();

        public Form1()
        {
            InitializeComponent();
        }

        private void btnAddPlayer_Click(object sender, EventArgs e)
        {
            this.AddPlayer();
        }

        private void btnRemovePlayer_Click(object sender, EventArgs e)
        {
            this.RemovePlayer();
        }

        private void AddPlayer()
        {
            lock (listOfControls)
            {
                // Create a player instance.
                var  player = new VlcControl();
                player.EndReached += PlayerOnEndReached;
                player.VlcLibDirectory = new DirectoryInfo(@"C:\Program Files (x86)\VideoLAN\VLC");
                player.EndInit();
                player.Size = new Size(200, 200);

                // Add player to the panel.
                this.panel.Controls.Add(player);

                // Tell the player to play
                player.SetMedia(this.textBox1.Text, " :network-caching=2000");
                player.Play();
                player.Audio.IsMute = true;

                // Add to a list
                listOfControls.Add(player);
            }
        }

        private void PlayerOnEndReached(object sender, VlcMediaPlayerEndReachedEventArgs e)
        {
            if (!(sender is VlcControl player)) return;

            Task.Run(() =>
            {
                player.SetMedia(this.textBox1.Text, " :network-caching=2000");
                player.Play();
            });
        }

        private void RemovePlayer()
        {
            lock (listOfControls)
            {
                if (!listOfControls.Any()) return;

                var player = listOfControls[0];

                // Add to a list
                listOfControls.Remove(player);

                player.BeginInvoke( (Action) delegate ()
                {
                    // Add player to the panel.
                    player.Stop();
                    player.EndReached -= PlayerOnEndReached;
                    player.Dispose();
                });
            }
        }   
    }
}
